{"path":"4. semester/CAOS/attachments/Pasted image 20240227181451.png","text":"(a) Original C code (b) Implementation using conditional assignment long absdiff(long x, long y) 1 long cmovdiff(long x, long y) t 2 4 long result; 3 long rval = y-x; if (x<y) 4 long eval = x-y; result = y - x; 5 long ntest = x >= y; else 6 /+ Line below requires result = x - y; 7 single instruction: */ return result; 8 if (ntest) rval = eval; > 9 return rval; 0 3 () Generated assembly code long absdiff(long x, long y) x in krdi, y in krsi 1 absdiff: 2 movq — %rsi, %rax 3 subq — %rdi, %rax rval = yx 4 movq — %rdi, 4råx 5 subq — %rsi, %rdx eval = x-y 6 cmpq — %rsi, %rdi Compare x:y 7 cnmovge %rdx, krax If >=, rval = eval 8 ret Return tval Figure 3.17 Compilation of conditional statements using conditional assignment. (a) C function absdiff contains a conditional expression. The generated assembly code is shown (c), along with (b) a € function cmovdiff that mimics the operation of the assembly code.","libVersion":"0.3.2","langs":"dan+eng"}