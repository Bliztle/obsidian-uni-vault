{"path":"4. semester/CAOS/attachments/Pasted image 20240227185745.png","text":"(b) Optimized C code 1 /+ Compute i,k of fixed matrix product */ 2 int fix prod ele opt(fix matrix A, fix matrix B, long i, long k) { 3 int +Aptr = &A[i] [0]; /+ Points to elements in row i of A */ 4 int +Bptr = &B[0][k]; /+ Points to elements in column k of B +/ 5 int +Bend = &B[N][k]; — /+ Marks stopping point for Bptr */ 6 int result = 0; 7 do { /+ No need for initial test +/ 8 result += +Aptr + +Bptr; /+ Add next product to sum +/ o Aptr +; /+ Move Aptr to next column +/ 10 Bptr += N; /+ Move Bptr to next row — + u ) while (Bptr != Bend); /+ Test for stopping point +/ 12 return result; = 3 Figure 3.37 Original and optimized code to compute element . k of matrix product for fixed-length arrays. The compiler performs these optimizations automatically.","libVersion":"0.3.2","langs":"dan+eng"}