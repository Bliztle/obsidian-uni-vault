{"path":"4. semester/SPO/attachments/Pasted image 20240319211927.png","text":"Fig. 53 Type checking 2 Checkrus(Fun.frable) = case Fun of funetion declaration Typeld (Typelds) = Exp | (f.10) = Getrypeia(Typeld) viable = Checkrypejas(Typelds) 11 = Checkep (Exp, vtable ftable) fo√∏n then error() Getrypeu(Typeld) = case Typeld of intid | (gemame(id), int) bool id | (gemame(id), bool) Checkyps (Typelds) = case Typelds ot Typeld (x,1) = Getrypets(Typeld) bind(emprytable.x.1) Typeld , Typelds | (x.1) = Getzypeis(Typeld) vtable = Checkrpeja;(Dpelds) if lookup(vtable,x) = unbound then bind(vtable,x.1) else error(); viable","libVersion":"0.3.2","langs":"dan+eng"}