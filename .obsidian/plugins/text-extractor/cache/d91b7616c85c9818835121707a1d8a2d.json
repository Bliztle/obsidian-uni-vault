{"path":"4. semester/CAOS/attachments/Pasted image 20240312211355.png","text":"Stage OPq rA, 1B rrnovq rA, IB imovq V, IB Fetch icode:ifun — Mi[PC] — icode:ifun — My[PC] — icode:ifun — M;[PC] MA:1B — Mi[PC+1] MA:NB — Mi[PC+1] MA:NB — Mi[PC+1] valC — M[PC +2] vaP — PC+2 valP — PC+2 valP — PC+10 Decode valA — R[rA] valå — R[rA] valB — R[rB] Execute valE — valB OP valA ValE — 0+ valA VaE — 0+ valc Set CC Memory Writeback R[rB] — valE R[18] — valE R[B] — valE PCupdate — PC + valp PC — valp PC — valp Figure 4.18 Computations in sequential implementation of Y86-64 instructions OPg, rrmova, and irmovq. These instructions compute a value and store the result in a register. The notation icode : ifun indicates the two components of the instruction byte, while rA : IB indicates the two components of the register specifier byte. The notation M,[x] indicates accessing (either reading or writing) 1 byte at memory location x, while My[x] indicates accessing 8 bytes.","libVersion":"0.3.2","langs":"dan+eng"}