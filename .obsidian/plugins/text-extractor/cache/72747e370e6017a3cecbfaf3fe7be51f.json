{"path":"4. semester/CAOS/attachments/Pasted image 20240530132947.png","text":"9. C-pointer Refresher; 1. Write a function printArray with parameter type long array, that prints its elements as a long integer value and a long hexidecimal value respectively (using %ld respectively %Ix as placeholders in printf, and use it to print a sample array \"a' containing 20 elements each initialized with the value from 10+i (where i is the index). e 10,1,…29 2. Make a pointer x to the 4th element (index 3), and print out its address (use %p). Also print out the address of ‘’. Are the addresses what you expect? 3. Print the value pointed by x by dereferencing x 4. Write a function swap (taking to long pointers as argument) that swaps the appointed values. Apply it to swap the array elements with indexes 0 and 5. print the Array 5. Print the hex value of the expression \"long y=\"(x+9)\" 6. What does it print if you set y=\"(x+100); 7. What happens if you set y=*(x+100000);? Why?","libVersion":"0.3.2","langs":"dan+eng"}