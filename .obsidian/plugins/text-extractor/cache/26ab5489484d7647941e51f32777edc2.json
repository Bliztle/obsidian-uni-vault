{"path":"4. semester/CAOS/attachments/Pasted image 20240530153902.png","text":"6. Implement the fibonacci function fib(n) using fork(), exit(), wait() in a Unix OS (any will do, eg the virtual machine). The intention is that the two summands should be computed in each their child process; the (intermediate) result is conveyed in the exit status; these are collected by the parent using wait() (thus that we here slightly abuse the exit-status to carry the result of a computation). Execute it for (very small values of n - why?). Here is C- scheleton code to get you going. The code only shows a single fork and how to extract the exit value of the process after wait (the exit value is limited in range to a single byte, despite the argument being an int). You need to fork twice to create a child for each of the summands of fib, and also to wait twice - once for each child to deliver their individual contribution to the result.","libVersion":"0.3.2","langs":"dan+eng"}