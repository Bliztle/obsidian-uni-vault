{"path":"3. Semester/OOP/attachments/Pasted image 20231026093719.png","text":"class Frame ( public class Square extends Shape ( private double side; private Shape shape; … private double maxX, maxY; Ø0verride public double getArea() f public double getArea() { return side % side; double area = 4*maxX*maxy; } area -= shape.getArea(); @Override return area; public void adjust(double maxX, double maxY) ) center(); side = Math.min(side, Math.min(2*maxX, 2%maxY)); ) getArea getArea | getArea public class Circle extends Shape { def private double radius; use | maxX, maxY, | side radius … hape Qover_*r*lde ; shap! public double zetirea() £ return Math.PI * Math.pow(radius, 2); adjust adjust åmver—r—ide public void adiust(double maxX, double maxY) { def |x, yy, side X, y, radius center(); radius = Math.min(radius, Math.min(maxX, maxY)); use | side radius ) 30","libVersion":"0.3.2","langs":"dan+eng"}