{"path":"4. semester/CAOS/attachments/Pasted image 20240501104404.png","text":"1 1nt loops; // must initialize somewhere... 2 cond t cond; 3 mutex t mutex; 3 vold »producer (void +arg) ( . 1nt 1; 7 for (1 = 0; 1 < loops; 1++) ( . Pthread mutex lock (&mutex); // på . if (count = 1) /1 p2 » Pthread cond wait (scond, smutex); // p3 u put (1); // på » Pthread cond signal(&cond); // ps » Pthread mutex unlock(smutex) ; // p6 u ) 3) ¥ vold +consumer(void +arg) ( 5 1nt 1; » for (1 = 0; 1 < loops; 1++) ( » Pthread mutex lock (&mutex); // el 2 if (count == 0) 1/ c2 2 Pthread cond wait (scond, smutex); // c3 » int tmp = get (); // ca u Pthread cond signal(&cond); // c5 s Pthread mutex unlock(smutex) ; // c6 å printf (\"sd\\n\", tmp); p ) > ) Figure 30.8: Producer/Consumer: Single CV And If Statement","libVersion":"0.3.2","langs":"dan+eng"}