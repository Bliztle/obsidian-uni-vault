{"path":"4. semester/SPO/attachments/Pasted image 20240403190346.png","text":"Transsui(Stat,viable. frable) = case Stat of Staty ; Staty | codey = Transsi;(Stat; , vtable, ftable) code = Transsy(Stat>, viable, frable) code ++code id := Exp place = newvar() x= lookup(viable, gemame(id)) Transg (Exp. vtable ftable,place) ++ (x := place] i£ Cond labely = newlabel() then Stary | labeh = newlabel() codey = Transcmøl Cond, labeh label», viable. fiable) code» — Transsy;(Star, , able, fiable) codey ++[LABEL labeli|++code ++[LABEL label,] if Cond label; = newlabel() thenStan | label = newlabel() else St | labels = newlabel() coder = Transcya( Cond. labely label», viable. fiable) codey — Transsq (Sta . viable. fiable) code = Transsu(Staty, vtable, ftable) codey ++{LABEL labely| ++codex ++[GOTO labels, LABEL labeh] ++codes++[LABEL labels] while Cond | label, = newlabel() 3o Stany label = newlabel() labels = newlabel() codey = Transcya( Cond, label>,labets, viable. fiable) code» = Transsyj(Stat, . viable.fiable) [LABEL labeh]++coder ++[LABEL label»++cøde» ++[GOTO label), LABEL labels] repeat Staty | label = newlabell) until Cond |labeh = newlabel() code = Transsi;(Stat; , vtable, ftable) code = Transcw(Cond label> label, , viable. fiable) [LABEL labeli]++coder ++codey++{LABEL labels]","libVersion":"0.3.2","langs":"dan+eng"}