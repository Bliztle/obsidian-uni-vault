{"path":"4. semester/SPO/attachments/Pasted image 20240423232831.png","text":"Tail recursion In functional programming languages, recursion is an important control structure. If f is a recursive function, then in a recursive call of f the caller and the callee are the same function! Every time a recursive call takes place, the call stack will grow. This can be a source of inefficiency and some programmers think this would be an argument against using recursion. But if we can make sure that the recursive calls are tail calls, the stack will not grow. This form of recursion is called tail recursion.","libVersion":"0.3.2","langs":"dan+eng"}