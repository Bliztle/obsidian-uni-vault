{"path":"4. semester/SS/attachments/Pasted image 20240418092133.png","text":"Type Soundness Well typing is meant to correspond to a semantic notion of good program behaviour. It is customary to check the internal consistency of a type system by proving a type soundness theorem. Define set(Int) = Z and set(Bool) = {tt, ff} skE iff VxeVar.(E0) = T= s(x) € set(T)) Theorem (Type Soundness for expressions) Assume s F E. f E + e: T,thens F e > vandv € set(T) Theorem (Type Soundness for statements) Assume s F E. If E + S: ok, then (S,s) > s'and 'F E","libVersion":"0.3.2","langs":"dan+eng"}