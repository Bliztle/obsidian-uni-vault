{"path":"4. semester/CAOS/attachments/Pasted image 20240501113912.png","text":"5. Consider the following program that may deadlock 1) For each thread, list the pairs of mutexes it holds simultaneously 2) fab Â« c,which threads violate the locking order rule for deadlock prevention: ( the lessThan < symbol indicate an ordering among the locks; here: a should be locked before b that should be locked before c) 3) Rewrite each thread to guarantees absence of deadlock sem t a; sem t b; sem t c; sem init(82,9,1); sem init(8D,0,1); sen init(80,9,1); [sen ATt (aa; [sen waTE(ac); [sen ATt (ac); lsem vait(8b); e wait(ab) lsen post(8c); lsen post(8b); lsen post(8b); e wait(ab) e vait(8c); lsen post(8c); e vait(82); lsen post(8c); e vait(82); lsen post(82); lsen post(8a); lsen post(8a); lsen post(8b);","libVersion":"0.3.2","langs":"dan+eng"}