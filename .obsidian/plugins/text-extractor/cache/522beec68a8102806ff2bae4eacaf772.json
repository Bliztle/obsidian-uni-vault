{"path":"4. semester/SS/attachments/Pasted image 20240429174440.png","text":"[ass-BIPBss] envy ,envp - (z := a, sto) — stoll = v] where envy , sto + a —q v and envyx = I [skIP-BIPSs] envv ,envp - (skip, sto) — sto envv ,envp - (Sy, sto) — sto\" [comP-BiPpss] envy , envp b (Sy, sto\") — sto! envy , envp F (S); 5y, sto) — sto' [1n-TRUE-BIPpeS] envv envp + (S1, sto) — sto' envy , envp - (if b then S, else Sy, sto) — sto' if envv , sto b b —s t ; envp I (Sy, sto) — sto' [IF-FALSE-BIPpss] 2 w enupt (Syysto) o st — envv , envp + (if b then S else Sy, stø) — sto' if envy , sto b b — ff envy ,envp - (S, sto) — sto\" [wWHILE-TRUE-BIPpss] — envy,envp H (uhile b do S, sto”) — sto! envv , envp F (while b do S, sto) — sto' if envy , sto + b — t [wWHILE-FALSE-BiPpss] envy,envp + (while b do S, sto) — sto if envy , sto + b —, ff (Dy,envy , sto) —py (envi,, sto”) i, H (Dp,envp) > y [procx-BiPss] env; + (Dp,envp) —pp envp envj;,envp - (S, st0\") — sto envy , envp + (begin Dy Dp S end, sto) — stø' Table 6.3 Big-step transition rules for Bip statements (except procedure calls)","libVersion":"0.3.2","langs":"dan+eng"}